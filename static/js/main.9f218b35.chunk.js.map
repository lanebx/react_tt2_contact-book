{"version":3,"sources":["components/CurrentContact/CurrentContact.tsx","components/ContactsList/ContactsList.tsx","components/AddContact/AddContact.tsx","App.tsx","api/contacts.tsx","index.tsx"],"names":["CurrentContact","contact","className","name","phone","email","website","ContactsList","this","props","contacts","onSelectContactID","deleteContact","map","onClick","id","type","React","Component","AddContact","state","nameCheck","phoneCheck","emailCheck","event","target","value","length","trim","setState","String","match","join","test","onSubmit","lengthContact","addNewContact","onChange","handlechange","required","contactList","App","selectedContactId","addContact","selectContact","userId","onClear","filter","object","preventDefault","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f218b35.chunk.js","sourcesContent":["import React from 'react';\nimport { Contact } from '../../api/contacts';\nimport './CurrentContact.scss';\n\ninterface Props {\n  contact: Contact | null;\n}\n\nexport const CurrentContact: React.FC<Props> = ({ contact }) => {\n  return (\n    <div className=\"CurrentContact\">\n      <div className=\"CurrentContact__name\">\n        {contact?.name}\n      </div>\n\n      <div className=\"CurrentContact__phone\">\n        {contact?.phone}\n      </div>\n\n      <div className=\"CurrentContact__email\">\n        {contact?.email}\n      </div>\n\n      <div className=\"CurrentContact__website\">\n        {contact?.website}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport { Contact } from '../../api/contacts';\nimport './ContactsList.scss';\n\ninterface Props {\n  contacts: Contact[];\n  onSelectContactID(userId: number) : void;\n  deleteContact(userId: number) : void;\n}\n\nexport class ContactsList extends React.Component<Props, {}> {\n  render() {\n    const {\n      contacts,\n      onSelectContactID,\n      deleteContact,\n    } = this.props;\n\n    return (\n      <div className=\"ContactsList\">\n        <h2 className=\"ContactsList__title\">\n          Contacts:\n        </h2>\n\n        <div className=\"ContactsList__list-container\">\n          <ul className=\"ContactsList__list\">\n            {contacts.map((contact: Contact) => {\n              return (\n                <li\n                  key={contact.id}\n                  className=\"ContactsList__item\"\n                >\n                  <div\n                    className=\"ContactsList__container\"\n                    onClick={() => {\n                      onSelectContactID(contact.id);\n                    }}\n                  >\n                    <div className=\"ContactsList__label\">\n                      {contact.name}\n                    </div>\n\n                    <div className=\"ContactsList__label\">\n                      {contact.phone}\n                    </div>\n                  </div>\n\n                  <button\n                    type=\"button\"\n                    className=\"ContactsList__button\"\n                    onClick={() => {\n                      deleteContact(contact.id);\n                    }}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport './AddContact.scss';\nimport { Contact } from '../../api/contacts';\n\ninterface State {\n  name: string;\n  phone: string;\n  email:string;\n  website:string;\n\n  nameCheck: boolean;\n  phoneCheck: boolean;\n  emailCheck: boolean;\n}\n\ninterface Props {\n  addNewContact(arg0: React.FormEvent<HTMLFormElement>, arg: Contact): void;\n  lengthContact: number;\n}\n\nexport class AddContact extends React.Component<Props, State> {\n  state: State = {\n    name: '',\n    phone: '',\n    email: '',\n    website: '',\n    nameCheck: true,\n    phoneCheck: true,\n    emailCheck: true,\n  };\n\n  handlechange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { name, value } = event.target;\n\n    if (name === 'name') {\n      if (value.length === value.trim().length) {\n        this.setState({ nameCheck: true });\n      } else {\n        this.setState({ nameCheck: false });\n      }\n\n      this.setState({ [name]: value });\n    }\n\n    if (name === 'phone') {\n      const reg = /^(\\+{0,})(\\d{0,})([(]{1}\\d{1,3}[)]{0,}){0,}(\\s?\\d+|\\+\\d{2,3}\\s{1}\\d+|\\d+){1}[\\s|-]?\\d+([\\s|-]?\\d+){1,2}(\\s){0,}$/gm;\n\n      if (String(value.match(reg)?.join('')) === value) {\n        this.setState({ phoneCheck: true });\n      } else {\n        this.setState({ phoneCheck: false });\n      }\n\n      this.setState({ [name]: value });\n    }\n\n    if (name === 'email') {\n      // eslint-disable-next-line no-useless-escape\n      const reg = /^([\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4})?$/;\n\n      if (reg.test(value)) {\n        this.setState({ emailCheck: true });\n      } else {\n        this.setState({ emailCheck: false });\n      }\n\n      this.setState({ [name]: value });\n    }\n\n    if (name === 'website') {\n      this.setState({ [name]: value });\n    }\n  }\n\n  render() {\n    const {\n      name,\n      phone,\n      email,\n      website,\n      nameCheck,\n      phoneCheck,\n      emailCheck,\n    } = this.state;\n\n    return (\n      <form\n        className=\"AddContact\"\n        onSubmit={(event) => {\n          const length = this.props.lengthContact + 1;\n\n          this.props.addNewContact(event, {\n            id: length,\n            name,\n            phone,\n            email,\n            website,\n          });\n        }}\n      >\n        <div>\n          Enter name:\n        </div>\n\n        <input\n          type=\"text\"\n          className={nameCheck ? 'input' : 'input error'}\n          name=\"name\"\n          value={name}\n          onChange={(event) => {\n            this.handlechange(event);\n          }}\n          required\n        />\n\n        <div>\n          Enter phone:\n        </div>\n\n        <input\n          type=\"text\"\n          className={phoneCheck ? 'input' : 'input error'}\n          value={phone}\n          name=\"phone\"\n          onChange={(event) => {\n            this.handlechange(event);\n          }}\n          required\n        />\n\n        <div>\n          Enter email:\n        </div>\n\n        <input\n          type=\"text\"\n          className={emailCheck ? 'input' : 'input error'}\n          value={email}\n          name=\"email\"\n          onChange={(event) => {\n            this.handlechange(event);\n          }}\n          required\n        />\n\n        <div>\n          Enter website:\n        </div>\n\n        <input\n          type=\"text\"\n          className=\"AddContact__website input\"\n          value={website}\n          name=\"website\"\n          onChange={(event) => {\n            this.handlechange(event);\n          }}\n        />\n\n        <button type=\"submit\" className=\"button App__button\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Contact, contactsFromServer } from './api/contacts';\nimport { CurrentContact } from './components/CurrentContact/CurrentContact';\n\nimport { ContactsList } from './components/ContactsList/ContactsList';\nimport { AddContact } from './components/AddContact/AddContact';\n\nconst contactList = contactsFromServer.map((contact: Contact) => {\n  return { ...contact };\n});\n\ninterface State {\n  selectedContactId: number;\n  contacts: Contact[];\n  addContact: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedContactId: 0,\n    contacts: contactList,\n    addContact: false,\n  };\n\n  selectContact = (userId: number) => {\n    this.setState({ selectedContactId: userId });\n  };\n\n  onClear = () => {\n    this.setState({ selectedContactId: 0 });\n  };\n\n  deleteContact = (userId: number) => {\n    this.setState((state) => {\n      return {\n        contacts: state.contacts.filter((contact) => contact.id !== userId),\n      };\n    });\n  };\n\n  addNewContact = (event: React.FormEvent<HTMLFormElement>, object: Contact) => {\n    event.preventDefault();\n\n    this.setState((state) => {\n      return {\n        contacts: [\n          ...state.contacts,\n          object,\n        ],\n        addContact: false,\n      };\n    });\n  };\n\n  render() {\n    const { selectedContactId, contacts, addContact } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__main-content\">\n          <div className=\"App__header\">\n            <h1 className=\"App__title\">\n              {!addContact ? 'Contacts book' : 'Add contact'}\n            </h1>\n            <div className=\"App__count\">\n              count:\n              {this.state.contacts.length}\n            </div>\n\n            {(!selectedContactId && !addContact) && (\n              <button\n                className=\"App__button-select\"\n                type=\"button\"\n                onClick={() => {\n                  this.setState({ addContact: true });\n                }}\n              >\n                Add contact\n              </button>\n            )}\n          </div>\n\n          {addContact\n            ? (\n              <div>\n                <AddContact\n                  addNewContact={this.addNewContact}\n                  lengthContact={this.state.contacts.length}\n                />\n\n                <button\n                  type=\"button\"\n                  className=\"button App__button\"\n                  onClick={() => {\n                    this.setState({ addContact: false });\n                  }}\n                >\n                  Back to contacts\n                </button>\n              </div>\n            )\n            : (\n              <div>\n                {selectedContactId\n                  ? (\n                    <div>\n                      <CurrentContact\n                        contact={contacts\n                          .find((contact: Contact) => contact.id === selectedContactId) || null}\n                      />\n\n                      <button\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => {\n                          this.setState({ selectedContactId: 0 });\n                        }}\n                      >\n                        To contacts\n                      </button>\n                    </div>\n                  )\n                  : (\n                    <ContactsList\n                      contacts={contacts}\n                      onSelectContactID={this.selectContact}\n                      deleteContact={this.deleteContact}\n                    />\n                  )}\n              </div>\n            )}\n\n        </div>\n      </div>\n    );\n  }\n}\n","export interface Contact {\n  id: number;\n  name: string;\n  email: string;\n  phone: string;\n  website: string;\n}\n\nexport const contactsFromServer = [\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    email: 'Nathan@yesenia.net',\n    phone: '(254)954-1289',\n    website: 'ramiro.info',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    email: 'Julianne.OConner@kory.org',\n    phone: '(254)954-1280',\n    website: 'kale.biz',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    email: 'Lucio_Hettinger@annie.ca',\n    phone: '(254)954-1266',\n    website: 'demarco.info',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    email: 'Karley_Dach@jasper.info',\n    phone: '(254)954-1266',\n    website: 'ola.org',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    email: 'Telly.Hoeger@billy.biz',\n    phone: '(254)954-1212',\n    website: 'elvis.io',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    email: 'Sherwood@rosamond.me',\n    phone: '(254)954-1678',\n    website: 'jacynthe.com',\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}